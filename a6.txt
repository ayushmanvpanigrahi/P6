PRACTICAL 6

Aim:-Define a web service method that returns the contents of a database in a JSON string. The contents should be displayed in a tabular format.
Step 1:-
Click on the Window menu and click on Projects, Files & Services to open it.

Step 2:-
Right click on Java DB and then click on Start Server to start the server.

Step 3:-
Now expand Java DB and right click on sample and then click on connect to connect the sample database with the server.

Step 4:-
Now we are going to create a table in the default database sample.
Right click on Table -> Create Table

Step 5:-
Give table names as FRIENDS.

Step 6:-
Now click on the Add column button to add columns in the table.
Enter details as in below pic and select the Primary key. After that click on OK button.

Step 7:-
Now add a second column with the following detail. But donâ€™t select primary and click on the OK button.
Step 8:-
Now click on the OK button.
Step 9:-
Now you can see a table with the name FRIENDS in the table.

Step 10:-
Right click on FRIENDS to view and add records into it.

Step 11:-
Now click on the leftmost icon in the second panel to insert some record.

Step 12:-
Insert a record and then click on the Add Row button to insert more records.
After that click on the OK button to finish.

Step 13:-
As you can see, I have entered 7 records.

Step 14:-
Now create a web application with the name Server. After that click on Next and then Finish button.

Step 15:-
Now create a RESTful Web Service from Database by right click on project name.

Step 16:-
Choose Data Source jdbc/sample.

Step 17:-
Now select FRIENDS and click on the Add button. After that click on Next button.


Step 18:-
Enter Package name as com.kk and click on Next button and then Finish.

Step 19:-
Now open the selected file by double clicking on it.

Step 20:-
Now remove the selected part from every method in this file. So that it will
communicate only in JSON format. You can also use methods to convert it. But
this is the easiest method.

Step 21:-
After that, right click on the project name and Deploy it.

Step 22:-
Now create one more Web Application as a Client. After that click on Next and then Finish button.

Step 23:-
Now open the index.html file of Client project and add the following code in between HEAD tags.

Step 24:-
Replace the content of the body tag with the following code.

-------------------------------------------------------------------------------------------------------------------

index.html:

<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8>
	<meta name="viewport" content=with=device-width,initial-scale=1.0">
        <title>JSP Page</title>
    
<style>
table{
font-family:arial,sans-serif;
border-collapse:collapse;
}
td,th{
border:1px solid #000000;
text-align:center;
padding:8px;
}

</style>

<script>
var request = new XMLHttpRequest();
request.open('GET','http://localhost:8080/Server/webresources/com.kk.friends/',true);
request.onload = function(){
var data = JSON.parse(this.response);
for (var i = 0 ;i < data.length;i++){
var table = document.getElementById("myTable");
var row = table.insertRow();
var cell1 = row.insertCell(0);
var cell2 = row.insertCell(1);
cell1.innerHTML =data[i].id;
cell2.innerHTML =data[i].firstname;
}
};
request.send();
</script>
</head>
    <body>
        <table id="myTable">
	<tr>
	   <th> ID</th>
	   <th> NAME</th>
       </tr>
</table>
    </body>
</html>

-------------------------------------------------------------------------------------------------------------------------



Step 25:-
Now run the Client Web Application.

Output:-
